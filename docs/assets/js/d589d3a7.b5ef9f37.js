"use strict";(self.webpackChunkgithub_comment=self.webpackChunkgithub_comment||[]).push([[924],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>h});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=a.createContext({}),i=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},s=function(e){var t=i(e.components);return a.createElement(m.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=i(n),g=o,h=p["".concat(m,".").concat(g)]||p[g]||c[g]||r;return n?a.createElement(h,u(u({ref:t},s),{},{components:n})):a.createElement(h,u({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,u=new Array(r);u[0]=g;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:o,u[1]=l;for(var i=2;i<r;i++)u[i]=n[i];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>i});var a=n(8168),o=(n(6540),n(5680));const r={sidebar_position:300},u="Getting Started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Please prepare a GitHub access token. https://github.com/settings/tokens",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/github-comment/getting-started",draft:!1,editUrl:"https://github.com/suzuki-shunsuke/github-comment-docs/edit/main/docs/getting-started.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/github-comment/install"},next:{title:"Usage",permalink:"/github-comment/usage"}},m={},i=[{value:"post",id:"post",level:2},{value:"exec",id:"exec",level:2}],s={toc:i},p="wrapper";function c(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"getting-started"},"Getting Started"),(0,o.yg)("p",null,"Please prepare a GitHub access token. ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"https://github.com/settings/tokens")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"github-comment")," provides the following subcommands."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"init: generate a configuration file template"),(0,o.yg)("li",{parentName:"ul"},"post: create a comment"),(0,o.yg)("li",{parentName:"ul"},"exec: execute a shell command and create a comment according to the command result"),(0,o.yg)("li",{parentName:"ul"},"hide: hide pull request or issue comments")),(0,o.yg)("h2",{id:"post"},"post"),(0,o.yg)("p",null,"Let's create a simple comment. ",(0,o.yg)("strong",{parentName:"p"},"Please change the parameter properly"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"$ github-comment post -token <your GitHub personal access token> -org suzuki-shunsuke -repo github-comment -pr 1 -template test\n")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601501451"},"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601501451")),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/suzuki-shunsuke/artifact@master/github-comment/post-test.png",alt:"post-test"})),(0,o.yg)("p",null,"You can pass the API token from the environment variable ",(0,o.yg)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"GITHUB_ACCESS_TOKEN")," too.\nThen you sent a comment ",(0,o.yg)("inlineCode",{parentName:"p"},"test")," to the pull request ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/github-comment/pull/1"},"https://github.com/suzuki-shunsuke/github-comment/pull/1")," .\nInstead of pull request, you can send a comment to a commit"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"$ github-comment post -org suzuki-shunsuke -repo github-comment -sha1 36b1ade9740768f3645c240d487b53bee9e42702 -template test\n")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/github-comment/commit/36b1ade9740768f3645c240d487b53bee9e42702#commitcomment-37933181"},"https://github.com/suzuki-shunsuke/github-comment/commit/36b1ade9740768f3645c240d487b53bee9e42702#commitcomment-37933181")),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/suzuki-shunsuke/artifact@master/github-comment/comment-to-commit.png",alt:"comment-to-commit"})),(0,o.yg)("p",null,"The template is rendered with ",(0,o.yg)("a",{parentName:"p",href:"https://golang.org/pkg/text/template/"},"Go's text/template"),"."),(0,o.yg)("p",null,"You can write the template in the configuration file."),(0,o.yg)("p",null,"github-comment.yaml"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"post:\n  default:\n    template: |\n      {{.Org}}/{{.Repo}} test\n  hello:\n    template: |\n      hello world\n")),(0,o.yg)("p",null,"If the argument ",(0,o.yg)("inlineCode",{parentName:"p"},"-template")," is given, the configuration file is ignored.\nYou can define multiple templates in the configuration file and specify the template by the argument ",(0,o.yg)("inlineCode",{parentName:"p"},"-template-key (-k)"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"$ github-comment post -k hello\n")),(0,o.yg)("p",null,"If ",(0,o.yg)("inlineCode",{parentName:"p"},"-template")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"-template-key")," aren't set, the template ",(0,o.yg)("inlineCode",{parentName:"p"},"default")," is used."),(0,o.yg)("h2",{id:"exec"},"exec"),(0,o.yg)("p",null,"Let's add the following configuration in the configuration file."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"exec:\n  hello:\n    - when: true\n      template: |\n        exit code: {{.ExitCode}}\n\n        ```\n        $ {{.Command}}\n        ```\n\n        Stdout:\n\n        ```\n        {{.Stdout}}\n        ```\n\n        Stderr:\n\n        ```\n        {{.Stderr}}\n        ```\n\n        CombinedOutput:\n\n        ```\n        {{.CombinedOutput}}\n        ```\n")),(0,o.yg)("p",null,"Then run a command and send the result as a comment."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},'$ github-comment exec -org suzuki-shunsuke -repo github-comment -pr 1 -k hello -- bash -c "echo foo; echo bar >&2; echo zoo"\nbar\nfoo\nzoo\n')),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601503124"},"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601503124")),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/suzuki-shunsuke/artifact@master/github-comment/exec-1.png",alt:"exec-1"})),(0,o.yg)("p",null,"Let's send the comment only if the command failed.\nUpdate the above configuration."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"exec:\n  hello:\n    - when: ExitCode != 0\n      template: |\n        ...\n")),(0,o.yg)("p",null,"Run the above command again, then the command wouldn't be created."),(0,o.yg)("p",null,"If the command failed, then the comment is created."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"$ github-comment exec -org suzuki-shunsuke -repo github-comment -pr 1 -k hello -- curl -f https://github.com/suzuki-shunsuke/not_found\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\ncurl: (22) The requested URL returned error: 404 Not Found\nexit status 22\n")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601505610"},"https://github.com/suzuki-shunsuke/github-comment/pull/1#issuecomment-601505610")),(0,o.yg)("p",null,"You can change the template by the command result."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"exec:\n  hello:\n    - when: ExitCode != 0\n      template: |\n        command failed\n    - when: ExitCode == 0\n      template: |\n        command is succeeded\n")),(0,o.yg)("p",null,"By ",(0,o.yg)("inlineCode",{parentName:"p"},"dont_comment"),", you can define the condition which the message isn't created."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"exec:\n  hello:\n    - when: ExitCode != 0\n      dont_comment: true\n    - when: true\n      template: |\n        Hello, world\n")))}c.isMDXComponent=!0}}]);