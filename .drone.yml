---
kind: pipeline
name: shell scripts
clone:
  depth: 1
steps:
  - name: shellcheck
    image: koalaman/shellcheck-alpine:v0.7.1
    commands:
      - shellcheck scripts/* githooks/*
  - name: shfmt
    image: mvdan/shfmt:v3.1.2-alpine
    commands:
      - shfmt -d .
---
kind: pipeline
name: yamllint
clone:
  depth: 1
steps:
  - name: output target files to the file
    image: plugins/git
    commands:
      - 'git ls-files | grep -E ".*\.ya?ml$" > yaml.txt'
  - name: yamllint
    image: quay.io/suzuki_shunsuke/yamllint:1.23.0
    commands:
      - 'cat yaml.txt | xargs yamllint -c .yamllint.yml'
---
kind: pipeline
name: build
clone:
  depth: 1
volumes:
  - name: gopath
    temp: {}
steps:
  - name: download go modules
    image: golang:1.14.6
    commands:
      - go mod download
    volumes: &volumes
      - name: gopath
        path: /go
  - name: golangci-lint
    image: golangci/golangci-lint:v1.29.0-alpine
    commands:
      - golangci-lint run
    volumes: *volumes
  - name: codecov
    image: golang:1.14.6
    commands:
      # bash and cgo seem to be required
      - bash scripts/codecov_test.sh
      - curl -s https://codecov.io/bash > /tmp/codecov.sh
      - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
    environment:
      CODECOV_TOKEN:
        from_secret: codecov_token
    volumes: *volumes
  - name: remove changes
    image: &image_git plugins/git
    commands:
      # Sometimes it is failed to release by goreleaser due to changes of go.sum
      - git checkout -- .

  - name: fetch tags to release
    image: *image_git
    commands:
      - git fetch --tags
    when:
      event:
        - tag
  - name: release
    image: goreleaser/goreleaser:v0.140.1
    commands:
      - goreleaser release
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes: *volumes
    when:
      event:
        - tag

  - name: release (skip publish)
    image: goreleaser/goreleaser:v0.140.1
    commands:
      - goreleaser release --snapshot
    volumes: *volumes
    when:
      event:
        - pull_request
        - push
